<?xml version="1.0"?>
<project name="MIMPathvisio" default="build-install" basedir=".">
	<!-- always be java 1.5 compatible -->
	<property name="ant.build.javac.target" value="1.5" />
	<property name="ant.build.javac.source" value="1.5" />

	<property name="base.name" value="MIMPathvisio" />
	<property name="jar.name" value="${base.name}.jar" />
	
	<property environment="env" />
	<property name="install.dir" value="${env.HOME}/.PathVisio/plugins" />
	<property name="pathvisio.dir" value="../pathvisio" />
	<property name="lib.dir" value="../pathvisio/lib" />
	<property name="images.dir" value="images" />
	
	<!--<property name="webstart.dir" value="build/webstart" />-->
	
	<path id="project.class.path">
		<pathelement location="${pathvisio.dir}/pathvisio.jar" />
		<pathelement location="build" />
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>
	
	<path id="test.class.path">
        <path refid="project.class.path" /> 		
        <pathelement location="build" /> 
	</path>	
	
	<target name="prepare">
		<mkdir dir="build" />
		<copy todir="build/images">
			<fileset dir="${images.dir}"/>
		</copy>
		<fail message="Can't find ${pathvisio.dir}/pathvisio.jar, please specify the path to pathvisio with -Dpathvisio.dir=....">
			<condition>
				<not>
					<available file="${pathvisio.dir}/pathvisio.jar" />
				</not>
			</condition>
		</fail>
	</target>

	<target name="build" depends="prepare">
		<javac srcdir="src" includes="**" debug="true" destdir="build">
			<classpath refid="project.class.path" />
		</javac>
	</target>

	<target name="jar" depends="build">
		<manifestclasspath property="manifest.cp" jarfile="${jar.name}">
			<classpath refid="project.class.path" />
		</manifestclasspath>
		<jar jarfile="${jar.name}">
			<fileset dir="build" includes="**/*.*" />
			<manifest>
				<attribute name="PathVisio-Plugin-Class" value="gov.nih.nci.lmp.mimplugin.MimPlugin"/>
			</manifest>
		</jar>
	</target>

	<target name="install">
		<copy toDir="${install.dir}">
			<fileset dir=".">
				<include name="${jar.name}" />
			</fileset>
		</copy>
	</target>

	<target name="build-install" depends="jar">
		<copy toDir="${install.dir}">
			<fileset dir=".">
				<include name="${jar.name}" />
			</fileset>
		</copy>
	</target>
	
	<target name="clean">
		<delete dir="build" />
	</target>

	<target name="dist-clean" depends="clean">
		<delete file="${jar.name}" />
	</target>

</project>
